//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace AWModel
{
    public partial class Product
    {
        #region Primitive Properties
    
        public virtual int ProductID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string ProductNumber
        {
            get;
            set;
        }
    
        public virtual string Color
        {
            get;
            set;
        }
    
        public virtual decimal StandardCost
        {
            get;
            set;
        }
    
        public virtual decimal ListPrice
        {
            get;
            set;
        }
    
        public virtual string Size
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Weight
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ProductCategoryID
        {
            get { return _productCategoryID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_productCategoryID != value)
                    {
                        if (ProductCategory != null && ProductCategory.ProductCategoryID != value)
                        {
                            ProductCategory = null;
                        }
                        _productCategoryID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _productCategoryID;
    
        public virtual Nullable<int> ProductModelID
        {
            get { return _productModelID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_productModelID != value)
                    {
                        if (ProductModel != null && ProductModel.ProductModelID != value)
                        {
                            ProductModel = null;
                        }
                        _productModelID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _productModelID;
    
        public virtual System.DateTime SellStartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> SellEndDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DiscontinuedDate
        {
            get;
            set;
        }
    
        public virtual byte[] ThumbNailPhoto
        {
            get;
            set;
        }
    
        public virtual string ThumbnailPhotoFileName
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ProductCategory ProductCategory
        {
            get { return _productCategory; }
            set
            {
                if (!ReferenceEquals(_productCategory, value))
                {
                    var previousValue = _productCategory;
                    _productCategory = value;
                    FixupProductCategory(previousValue);
                }
            }
        }
        private ProductCategory _productCategory;
    
        public virtual ProductModel ProductModel
        {
            get { return _productModel; }
            set
            {
                if (!ReferenceEquals(_productModel, value))
                {
                    var previousValue = _productModel;
                    _productModel = value;
                    FixupProductModel(previousValue);
                }
            }
        }
        private ProductModel _productModel;
    
        public virtual ICollection<SalesOrderDetail> SalesOrderDetails
        {
            get
            {
                if (_salesOrderDetails == null)
                {
                    var newCollection = new FixupCollection<SalesOrderDetail>();
                    newCollection.CollectionChanged += FixupSalesOrderDetails;
                    _salesOrderDetails = newCollection;
                }
                return _salesOrderDetails;
            }
            set
            {
                if (!ReferenceEquals(_salesOrderDetails, value))
                {
                    var previousValue = _salesOrderDetails as FixupCollection<SalesOrderDetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSalesOrderDetails;
                    }
                    _salesOrderDetails = value;
                    var newValue = value as FixupCollection<SalesOrderDetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSalesOrderDetails;
                    }
                }
            }
        }
        private ICollection<SalesOrderDetail> _salesOrderDetails;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupProductCategory(ProductCategory previousValue)
        {
            if (previousValue != null && previousValue.Products.Contains(this))
            {
                previousValue.Products.Remove(this);
            }
    
            if (ProductCategory != null)
            {
                if (!ProductCategory.Products.Contains(this))
                {
                    ProductCategory.Products.Add(this);
                }
                if (ProductCategoryID != ProductCategory.ProductCategoryID)
                {
                    ProductCategoryID = ProductCategory.ProductCategoryID;
                }
            }
            else if (!_settingFK)
            {
                ProductCategoryID = null;
            }
        }
    
        private void FixupProductModel(ProductModel previousValue)
        {
            if (previousValue != null && previousValue.Products.Contains(this))
            {
                previousValue.Products.Remove(this);
            }
    
            if (ProductModel != null)
            {
                if (!ProductModel.Products.Contains(this))
                {
                    ProductModel.Products.Add(this);
                }
                if (ProductModelID != ProductModel.ProductModelID)
                {
                    ProductModelID = ProductModel.ProductModelID;
                }
            }
            else if (!_settingFK)
            {
                ProductModelID = null;
            }
        }
    
        private void FixupSalesOrderDetails(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SalesOrderDetail item in e.NewItems)
                {
                    item.Product = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SalesOrderDetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.Product, this))
                    {
                        item.Product = null;
                    }
                }
            }
        }

        #endregion
    }
}
