//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace AWModel
{
    public partial class ProductCategory
    {
        #region Primitive Properties
    
        public virtual int ProductCategoryID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ParentProductCategoryID
        {
            get { return _parentProductCategoryID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_parentProductCategoryID != value)
                    {
                        if (ProductCategory2 != null && ProductCategory2.ProductCategoryID != value)
                        {
                            ProductCategory2 = null;
                        }
                        _parentProductCategoryID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _parentProductCategoryID;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Product> Products
        {
            get
            {
                if (_products == null)
                {
                    var newCollection = new FixupCollection<Product>();
                    newCollection.CollectionChanged += FixupProducts;
                    _products = newCollection;
                }
                return _products;
            }
            set
            {
                if (!ReferenceEquals(_products, value))
                {
                    var previousValue = _products as FixupCollection<Product>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProducts;
                    }
                    _products = value;
                    var newValue = value as FixupCollection<Product>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProducts;
                    }
                }
            }
        }
        private ICollection<Product> _products;
    
        public virtual ICollection<ProductCategory> ProductCategory1
        {
            get
            {
                if (_productCategory1 == null)
                {
                    var newCollection = new FixupCollection<ProductCategory>();
                    newCollection.CollectionChanged += FixupProductCategory1;
                    _productCategory1 = newCollection;
                }
                return _productCategory1;
            }
            set
            {
                if (!ReferenceEquals(_productCategory1, value))
                {
                    var previousValue = _productCategory1 as FixupCollection<ProductCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProductCategory1;
                    }
                    _productCategory1 = value;
                    var newValue = value as FixupCollection<ProductCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProductCategory1;
                    }
                }
            }
        }
        private ICollection<ProductCategory> _productCategory1;
    
        public virtual ProductCategory ProductCategory2
        {
            get { return _productCategory2; }
            set
            {
                if (!ReferenceEquals(_productCategory2, value))
                {
                    var previousValue = _productCategory2;
                    _productCategory2 = value;
                    FixupProductCategory2(previousValue);
                }
            }
        }
        private ProductCategory _productCategory2;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupProductCategory2(ProductCategory previousValue)
        {
            if (previousValue != null && previousValue.ProductCategory1.Contains(this))
            {
                previousValue.ProductCategory1.Remove(this);
            }
    
            if (ProductCategory2 != null)
            {
                if (!ProductCategory2.ProductCategory1.Contains(this))
                {
                    ProductCategory2.ProductCategory1.Add(this);
                }
                if (ParentProductCategoryID != ProductCategory2.ProductCategoryID)
                {
                    ParentProductCategoryID = ProductCategory2.ProductCategoryID;
                }
            }
            else if (!_settingFK)
            {
                ParentProductCategoryID = null;
            }
        }
    
        private void FixupProducts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Product item in e.NewItems)
                {
                    item.ProductCategory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Product item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProductCategory, this))
                    {
                        item.ProductCategory = null;
                    }
                }
            }
        }
    
        private void FixupProductCategory1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ProductCategory item in e.NewItems)
                {
                    item.ProductCategory2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProductCategory2, this))
                    {
                        item.ProductCategory2 = null;
                    }
                }
            }
        }

        #endregion
    }
}
